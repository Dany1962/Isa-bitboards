#ifndef EVAL_H_INCLUDED
#define EVAL_H_INCLUDED

#define VAL_PAWN	100
#define VAL_KNIGHT	300
#define VAL_BISHOP	300
#define VAL_ROOK	500
#define VAL_QUEEN	900
#define VAL_KING	10000

#define MATE		10000

int coef_phase[25];

static const int pst_pb_mg[64] = 
{
	  0,  0,  0,  0,  0,  0,  0,   0, 
	-15, -5,  0,  5,  5,  0, -5, -15,
	-15, -5,  0, 15, 15,  0, -5, -15,
	-15, -5,  0, 25, 25,  0, -5, -15,
	-15, -5,  0, 35, 35,  0, -5, -15,
	-15, -5,  0,  5,  5,  0, -5, -15,
	-15, -5,  0,  5,  5,  0, -5, -15,
	  0,  0,  0,  0,  0,  0,  0,   0
};

static const int pst_pb_eg[64] = 
{
	  0,  0,  0,  0,  0,  0,  0,  0,
	  5,  5,  5,  5,  5,  5,  5,  5,
	  8,  8,  8,  8,  8,  8,  8,  8,
	 12, 12, 12, 12, 12, 12, 12, 12, 
	 17, 17, 17, 17, 17, 17, 17, 17,
	 23, 23, 23, 23, 23, 23, 23, 23,
	 30, 30, 30, 30, 30, 30, 30, 30,
	  0,  0,  0,  0,  0,  0,  0,  0
};

static const int pst_cb_mg[64] = 
{
	-50, -40, -30, -25, -25, -30, -40,  -50,
	-35, -25, -15, -10, -10, -15, -25,  -35,
	-20, -10,   0,   5,   5,   0, -10,  -20,
	-10,   0,  10,  15,  15,  10,   0,  -10,
	 -5,   5,  15,  20,  20,  15,   5,   -5,
	 -5,   5,  15,  20,  20,  15,   5,   -5,
	-20, -10,   0,   5,   5,   0, -10,  -20,
	-135, -25, -15, -10, -10, -15, -25, -135,  
};

static const int pst_cb_eg[64] =
{
	-40, -30, -20, -15, -15, -20, -30, -40,
    -30, -20, -10,  -5,  -5, -10, -20, -30,
    -20, -10,   0,   5,   5,   0, -10, -20,
    -15,  -5,   5,  10,  10,   5,  -5, -15,
    -15,  -5,   5,  10,  10,   5,  -5, -15,
    -20, -10,   0,   5,   5,   0, -10, -20,
    -30, -20, -10,  -5,  -5, -10, -20, -30,
    -40, -30, -20, -15, -15, -20, -30, -40
};

static const int pst_fb_mg[64] =
{
	-18, -18, -16, -14, -14, -16, -18, -18,
	-8,   0,  -2,   0,   0,  -2,   0,   -8,
	-6,  -2,   4,   2,   2,   4,  -2,   -6,
	-4,   0,   2,   8,   8,   2,   0,   -4,
	-4,   0,   2,   8,   8,   2,   0,   -4,
	-6,  -2,   4,   2,   2,   4,  -2,   -6,
	-8,   0,  -2,   0,   0,  -2,   0,   -8,
	-8,  -8,  -6,  -4,  -4,  -6,  -8,   -8
};

static const int pst_fb_eg[64] =
{
	-18, -12, -9, -6, -6, -9, -12, -18,
    -12,  -6, -3,  0,  0, -3,  -6, -12,
    -9,  -3,  0,  3,  3,  0,  -3,  -9,
    -6,   0,  3,  6,  6,  3,   0,  -6,
    -6,   0,  3,  6,  6,  3,   0,  -6,
    -9,  -3,  0,  3,  3,  0,  -3,  -9,
    -12,  -6, -3,  0,  0, -3,  -6, -12,
    -18, -12, -9, -6, -6, -9, -12, -18
};

static const int pst_tb_mg[64] =
{
	-6, -3, 0, 3, 3, 0, -3, -6,
    -6, -3, 0, 3, 3, 0, -3, -6,
    -6, -3, 0, 3, 3, 0, -3, -6,
    -6, -3, 0, 3, 3, 0, -3, -6,
    -6, -3, 0, 3, 3, 0, -3, -6,
    -6, -3, 0, 3, 3, 0, -3, -6,
    -6, -3, 0, 3, 3, 0, -3, -6,
    -6, -3, 0, 3, 3, 0, -3, -6
};

static const int pst_tb_eg[64] =
{
	0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0
};

static const int pst_db_mg[64] = 
{
	-5, -5, -5, -5, -5, -5, -5, -5,
	0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0
    
};

static const int pst_db_eg[64] = 
{
	-24, -16, -12, -8, -8, -12, -16, -24,
    -16,  -8,  -4,  0,  0,  -4,  -8, -16,
    -12,  -4,   0,  4,  4,   0,  -4, -12,
    -8,   0,   4,  8,  8,   4,   0,  -8,
    -8,   0,   4,  8,  8,   4,   0,  -8,
    -12,  -4,   0,  4,  4,   0,  -4, -12,
    -16,  -8,  -4,  0,  0,  -4,  -8, -16,
    -24, -16, -12, -8, -8, -12, -16, -24
};

static const int pst_rb_mg[64] =
{
	20, 30, 10,   0,   0, 10, 30, 20,
	20, 20,-10, -20, -20,-10, 20, 20,
	-10,-20,-30, -50, -50,-30,-20,-10,
	-20,-30,-50,-100,-100,-50,-30,-20,
	-30,-40,-50,-100,-100,-40,-40,-30,
	-30,-40,-50, -50, -50,-40,-40,-30,
	-30,-40,-50, -50, -50,-50,-40,-30,
	-30,-40,-40, -50, -50,-40,-40,-30
};

static const int pst_rb_eg[64] =
{
	-72, -48, -36, -24, -24, -36, -48, -72,
    -48, -24, -12,   0,   0, -12, -24, -48,
    -36, -12,   0,  12,  12,   0, -12, -36,
    -24,   0,  12,  24,  24,  12,   0, -24,
    -24,   0,  12,  24,  24,  12,   0, -24,
    -36, -12,   0,  12,  12,   0, -12, -36,
    -48, -24, -12,   0,   0, -12, -24, -48,
    -72, -48, -36, -24, -24, -36, -48, -72
};

int psqt_mg[13][64];
int psqt_eg[13][64];

static int flip[64] =
{
    56,  57,  58,  59,  60,  61,  62,  63,
    48,  49,  50,  51,  52,  53,  54,  55,
    40,  41,  42,  43,  44,  45,  46,  47,
    32,  33,  34,  35,  36,  37,  38,  39,
    24,  25,  26,  27,  28,  29,  30,  31,
    16,  17,  18,  19,  20,  21,  22,  23,
     8,   9,  10,  11,  12,  13,  14,  15,
     0,   1,   2,   3,   4,   5,   6,   7
};

U64 mask_front_wp[64];
U64 mask_front_bp[64];

//FONCTIONS
//eval params
int pion_passe_blanc();
int pion_passe_noir();
//utilitaires
int eval();
void eval_psqt_w(U64 *ptab, int *smg, int *seg);
void eval_psqt_b(U64 *ptab, int *smg, int *seg);
int eval_dif_materiel();		//materiel score white POV
int eval_materiel_blanc();
int eval_materiel_noir();
int eval_w_mob(U64 *ptab);
int eval_b_mob(U64 *ptab);
void draw_recognizer();
int KBB_K_recognizer();
int KBN_K_recognizer();
//calcul phase
int phase();


#endif // EVAL_H_INCLUDED
